#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ–¥–∏–∞ file_id –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""
import asyncio
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from bot.database.operations import DatabaseManager

async def fix_invalid_media():
    """–û—á–∏—â–∞–µ—Ç –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ–¥–∏–∞ file_id –∏–∑ –≤—Å–µ—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π"""
    
    db_path = "data/bot.db"
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return
    
    print("üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –º–µ–¥–∏–∞ –≤ –ø—Ä–æ—Ñ–∏–ª—è—Ö...")
    
    db_manager = DatabaseManager(db_path)
    await db_manager.connect()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ —Å –º–µ–¥–∏–∞
        import aiosqlite
        async with aiosqlite.connect(db_path) as conn:
            conn.row_factory = aiosqlite.Row
            cursor = await conn.execute("""
                SELECT user_id, game_nickname, media_type 
                FROM profiles 
                WHERE media_type IS NOT NULL AND media_file_id IS NOT NULL
            """)
            profiles_with_media = await cursor.fetchall()
        
        if not profiles_with_media:
            print("üì∑ –ü—Ä–æ—Ñ–∏–ª–µ–π —Å –º–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        print(f"üì∑ –ù–∞–π–¥–µ–Ω–æ {len(profiles_with_media)} –ø—Ä–æ—Ñ–∏–ª–µ–π —Å –º–µ–¥–∏–∞")
        
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1. –û—á–∏—Å—Ç–∏—Ç—å –í–°–ï –º–µ–¥–∏–∞ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)\n2. –¢–æ–ª—å–∫–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫\n3. –û—Ç–º–µ–Ω–∏—Ç—å\n–í–≤–æ–¥: ")
        
        if choice == "1":
            print(f"\nüßπ –û—á–∏—â–∞–µ–º –º–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã–µ...")
            fixed_count = 0
            
            for profile in profiles_with_media:
                user_id = profile['user_id']
                nickname = profile['game_nickname']
                media_type = profile['media_type']
                
                # –û—á–∏—â–∞–µ–º –º–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã–µ
                success = await db_manager.update_profile(
                    user_id,
                    media_type=None,
                    media_file_id=None
                )
                
                if success:
                    print(f"‚úÖ –û—á–∏—â–µ–Ω–æ –º–µ–¥–∏–∞ –¥–ª—è {nickname} (ID: {user_id}) - —Ç–∏–ø: {media_type}")
                    fixed_count += 1
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –º–µ–¥–∏–∞ –¥–ª—è {nickname} (ID: {user_id})")
            
            print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {fixed_count} –∏–∑ {len(profiles_with_media)} –ø—Ä–æ—Ñ–∏–ª–µ–π")
            print("‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ–¥–∏–∞ –≤ —Å–≤–æ–∏ –ø—Ä–æ—Ñ–∏–ª–∏")
            
        elif choice == "2":
            print(f"\nüìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–∏–ª–µ–π —Å –º–µ–¥–∏–∞:")
            for profile in profiles_with_media:
                print(f"  - {profile['game_nickname']} (ID: {profile['user_id']}) - {profile['media_type']}")
        
        else:
            print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    finally:
        await db_manager.disconnect()

if __name__ == "__main__":
    asyncio.run(fix_invalid_media())
